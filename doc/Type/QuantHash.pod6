=begin pod

=TITLE role QuantHash

=SUBTITLE Object hashes with limitation on type of value

    role QuantHash does Associative { }

The C<QuantHash> role provides the basic functionality shared by the L<Setty>,
L<Baggy> and L<Mixy> roles.  These provide object hashes of which the values
are limited in some way.

C<QuantHashes> are what L</language/setbagmix|set operators> use internally.

=head1 Methods

=head2 method hash

    method hash()

Coerces the C<QuantHash> object to a L<Hash> (by stringifying the objects
for the keys) with the values of the hash limited to the same limitation as
C<QuantHash>, and returns that.

=head2 method Hash

    method Hash()

Coerces the C<QuantHash> object to a L<Hash> (by stringifying the objects
for the keys) without any limitations on the values, and returns that.

=head2 method of

    method of()

Returns the type of value a value of this C<QuantHash> may have.  This is
typically L<Bool> for L<Setty>, L<UInt> for L<Baggy> or L<Real> for L<Mixy>
roles.

=head2 method keyof

    method keyof()

Returns the type of value a key of this C<QuantHash> may have.  This is
typically L<Mu>.

=head2 method Setty

    method Setty(--> Setty:D)

Coerce the C<QuantHash> object to the equivalent object that uses the L<Setty>
role.

=head2 method Baggy

    method Baggy(--> Baggy:D)

Coerce the C<QuantHash> object to the equivalent object that uses the L<Baggy>
role.

=head2 method Mixy

    method Mixy(--> Mixy:D)

Coerce the C<QuantHash> object to the equivalent object that uses the L<Mixy>
role.

=end pod

# vim: expandtab softtabstop=4 shiftwidth=4 ft=perl6
